Option Explicit
Dim sCurrentPath As String
Sub GenerateInvoice()
' this procedure takes the respective .dotx file for each customer
' and apply the discount as declared in this sheet
' Formats the file as required and generates the invoice
' it saves the invoice in the same folder

    UpdateFilePath

    ProcessData

    MsgBox "Invoices have been successfully generated.", vbOKOnly
    
End Sub

Private Sub UpdateFilePath()
' this procedure is used to identify & display the location of the .dotx file

Dim iMaxRow As Long
Dim iCounter As Integer
Dim sFilePath As String
Dim sDetails As String

    Sheets("Discount").Activate
    
    iMaxRow = Range("A1").End(xlDown).Row
    
    sFilePath = ""
    
    sCurrentPath = ThisWorkbook.Path
    
    For iCounter = 2 To iMaxRow
        sFilePath = sCurrentPath & "\Templates\" & Cells(iCounter, "A") & ".dotx"
        sDetails = sCurrentPath & "\Data\" & Cells(iCounter, "A") & ".xlsx"
        
        Cells(iCounter, "C").Value = sFilePath
        Cells(iCounter, "D").Value = sDetails
        
    Next iCounter
    
End Sub

Private Sub ProcessData()
Dim iMaxRow As Integer
Dim iCounter As Integer
Dim dDiscount As Double
Dim sTemplatePath As String
Dim sFilePath As String

Dim WordApp As Object
Dim WordDoc As Object
Dim dEdit As Document


Dim sCustomerName As String
Dim sFileName As String
Dim sDiscountType As String
Dim iMultipleProjects As Integer
Dim iRoundOff As Integer



    sCurrentPath = ThisWorkbook.Path
    
    iMaxRow = Range("A1").End(xlDown).Row

    For iCounter = 2 To iMaxRow
        sCustomerName = Cells(iCounter, "A")
        dDiscount = CDbl(Cells(iCounter, "B"))
        sTemplatePath = Cells(iCounter, "C")
        sFilePath = Cells(iCounter, "D")
        sDiscountType = Cells(iCounter, "E")
        iMultipleProjects = Cells(iCounter, "F")
        iRoundOff = Cells(iCounter, "G")
        
        Workbooks.Open sFilePath
        
        'Removing unwanted columns from the data extracted from project billing
        RemoveUnwantedColumns
        
        ' check if there are multiple projects
        If iMultipleProjects = 0 Then
            Call FormatSheetforSingleProject(dDiscount, sDiscountType, iRoundOff)
        ElseIf iMultipleProjects = 1 Then
            Call FormatSheetforMultipleProject(dDiscount, sDiscountType, iRoundOff)
        End If
               
        
        ' Create a Word document using a template
        Set WordApp = CreateObject("Word.Application")
        Set WordDoc = New Document
        Set WordDoc = Application.ActiveProtectedViewWindow.Edit
        Set WordDoc = WordApp.Documents.Add(sTemplatePath)
        
        'put the current date in the invoice
        WordApp.Selection.Goto What:=wdGoToBookmark, Name:="date"
        'WordApp.Selection.Text = CDate(Date)
        ' put last day of the month in invoice
        WordApp.Selection.Text = DateSerial(Year(Date), Month(Date), 0)
        
                '******** Invoice details ********
        WordApp.Selection.Goto What:=wdGoToBookmark, Name:="detail"
        WordApp.Selection.PasteSpecial
        
        
        WordApp.Visible = True
        
        'clear the cli[board
        Application.CutCopyMode = False
        
        sFileName = "Invoice_" & sCustomerName '& "_" & Format(Date, "mmm-yy")
        
        WordDoc.SaveAs Filename:=sCurrentPath & "\" & sFileName & ".docx"
       
        WordDoc.Close
        
        WordApp.Quit
        
        Workbooks(sCustomerName & ".xlsx").Close SaveChanges:=False
    
    Next iCounter
    
    
    Set WordApp = Nothing
    
    Set WordDoc = Nothing
    
    
End Sub

Private Sub FormatSheetforSingleProject(Discount As Double, DiscountType As String, RoundOff As Integer)
Dim iMaxRow As Integer
Dim iCounter As Integer
Dim iLeaves As Integer
Dim sName As String
Dim dAmount As Double
Dim dDiscountAmount As Double
Dim dInvoiceAmount As Double
Dim iproFrom As Integer
Dim iproTill As Integer
Dim bstartDate As Variant
Dim bendDate As Variant


    ' remove unwanted columns
    'Columns("E:H").Select
    ' New code to remove unwanted columns to retain billing start and end dates - 23june2016
    Columns("E:F").Select
    Selection.Delete Shift:=xlToLeft
    
    ' format rest of the sheet
    'change the column headers
    Cells(1, "A") = "S No."
    Cells(1, "B") = "Description"
    Cells(1, "J") = "Unit Price"
    Cells(1, "K") = "Amount in USD"
    
    iMaxRow = Range("A1").End(xlDown).Row
    
    dAmount = 0
    
      
    For iCounter = 2 To iMaxRow
       
        iLeaves = CInt(Cells(iCounter, "G"))
        bstartDate = Format(Cells(iCounter, "E"), "mm/dd/yyyy")
        bendDate = Format(Cells(iCounter, "F"), "mm/dd/yyyy")
        iproFrom = Day(bstartDate)
        iproTill = Day(bendDate)
        
        
        If iLeaves > 0 Then
            sName = Cells(iCounter, "B")
            Cells(iCounter, "B") = sName & " - leaves adjusted " & iLeaves & " day(s)"
        End If
        
        ' checking for pro-rate
        If iproFrom > 1 Then
            sName = Cells(iCounter, "B")
            Cells(iCounter, "B") = sName & " - prorated from " & bstartDate
        End If
        If iproTill < 30 Then
            sName = Cells(iCounter, "B")
            Cells(iCounter, "B") = sName & " - prorated till " & bendDate
        End If
            
            
        'round off the values as required
        
        Cells(iCounter, "K") = Round(Cells(iCounter, "K"), RoundOff)
        
        dAmount = dAmount + CDbl(Cells(iCounter, "K"))
        
    Next iCounter
    
    
    ' sort based on billing status
    Cells.Select
    Application.CutCopyMode = False
    ActiveWorkbook.Worksheets(1).Sort.SortFields.Clear
    ActiveWorkbook.Worksheets(1).Sort.SortFields.Add Key:=Range("D2:D" & iMaxRow) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets(1).Sort
        .SetRange Range("A1:K" & iMaxRow)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    
    
    ' remove unbilled and shadow rows
    
    For iCounter = 2 To iMaxRow

        ' remove unbilled or shadow rows
        If Cells(iCounter, "D") = C_SUNBILLED Or Cells(iCounter, "D") = C_SSHADOW Then
            Range("D" & iCounter).Select
            Application.CutCopyMode = False
            Selection.EntireRow.Delete
            iCounter = iCounter - 1
        End If

    Next iCounter

    ' remove correction and net days & Billing start and end dates
    Columns("C:H").Select
    Selection.Delete Shift:=xlToLeft
    
    ' calibrate the row numbers
    
    iMaxRow = Range("A1").End(xlDown).Row
    
    For iCounter = 2 To iMaxRow
        Cells(iCounter, "A") = iCounter - 1
    Next iCounter
    
    
    If DiscountType = C_SPCT Then
        dDiscountAmount = Discount * dAmount
    ElseIf DiscountType = C_SAMT Then
        dDiscountAmount = Discount
    End If
    
    dInvoiceAmount = dAmount - dDiscountAmount
    
    Cells(iMaxRow + 1, "B") = "Total Amount"

    Cells(iMaxRow + 1, "E") = Round(dAmount, RoundOff)
    

    If Discount > 0 Then
        Cells(iMaxRow + 2, "B") = "Discount"
    
        Cells(iMaxRow + 2, "E") = Round(dDiscountAmount, RoundOff)
    End If
    
    Cells(iMaxRow + 3, "B") = "Total Invoice Amount"

    Cells(iMaxRow + 3, "E") = Round(dInvoiceAmount, RoundOff)
    
    'format the cells to highlight content
    FinishingTouch iMaxRow
    
    'copy the selection to clipboard
    Range("A1:E" & iMaxRow + 3).Copy
    
End Sub

Private Sub FinishingTouch(MaxRow As Integer)

    Cells.Select
    Cells.EntireColumn.AutoFit
    Range("A1:E1").Select
    Selection.Font.Bold = True
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark2
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
    Range("A1:E" & MaxRow + 3).Select
    
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    
    With Selection.Font
        .Name = "Arial Narrow"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With

    Range("A" & MaxRow + 1 & ":E" & MaxRow + 3).Select
    Selection.Font.Bold = True
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark2
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
    'Formatting amount columns

    Columns("D:E").Select
    Selection.NumberFormat = "#,##0"
    
    ' set the column width
    Columns("A:A").ColumnWidth = 7.29
    Columns("B:B").ColumnWidth = 37.57
    Columns("C:C").ColumnWidth = 24.29
    Columns("D:D").ColumnWidth = 9.86
    Columns("E:E").ColumnWidth = 14.14
    
End Sub
Private Sub MultipleFinishingTouch(MaxRow As Integer)

    Cells.Select
    Cells.EntireColumn.AutoFit
    Range("A1:F1").Select
    Selection.Font.Bold = True
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark2
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
    Range("A1:F" & MaxRow + 2).Select
    
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    With Selection.Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    With Selection.Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With Selection.Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    
    With Selection.Font
        .Name = "Arial Narrow"
        .Size = 11
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With

    Range("A" & MaxRow & ":F" & MaxRow + 2).Select
    Selection.Font.Bold = True
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark2
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    
    ' set wrap text for the columns
    Columns("B:D").Select
    With Selection
        .HorizontalAlignment = xlGeneral
        .VerticalAlignment = xlBottom
        .WrapText = True
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .MergeCells = False
    End With
    
    'Formatting amount columns

    Columns("E:F").Select
    Selection.NumberFormat = "#,##0.00"
    
    ' set the column width
    Columns("A:A").ColumnWidth = 5.86
    Columns("B:B").ColumnWidth = 22.57
    Columns("C:C").ColumnWidth = 27.86
    Columns("D:D").ColumnWidth = 14.86
    Columns("E:E").ColumnWidth = 8.29
    Columns("F:F").ColumnWidth = 13#
    
End Sub



Private Sub FormatSheetforMultipleProject(Discount As Double, DiscountType As String, RoundOff As Integer)
Dim iMaxRow As Integer
Dim iCounter As Integer
Dim iLeaves As Integer
Dim sName As String
Dim dAmount As Double
Dim dDiscountAmount As Double
Dim dInvoiceAmount As Double
Dim iMaxCol As Integer
Dim iRowNum As Integer
Dim iproFrom As Integer
Dim iproTill As Integer
Dim bstartDate As Variant
Dim bendDate As Variant


    ' remove unwanted columns
    'Columns("G:H").Select
    'Selection.Delete Shift:=xlToLeft
    
    ' format rest of the sheet
    'change the column headers
    Cells(1, "A") = "S No."
    Cells(1, "B") = "Description"
    Cells(1, "L") = "Unit Price"
    Cells(1, "M") = "Amount in USD"
    
    iMaxRow = Range("A1").End(xlDown).Row
    
    dAmount = 0
    
    ' sort based on billing status
    Cells.Select
    ActiveWorkbook.Worksheets(1).Sort.SortFields.Clear
    ActiveWorkbook.Worksheets(1).Sort.SortFields.Add Key:=Range("D2:D" & iMaxRow) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ActiveWorkbook.Worksheets(1).Sort.SortFields.Add Key:=Range("F2:F" & iMaxRow) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    With ActiveWorkbook.Worksheets(1).Sort
        .SetRange Range("A1:M" & iMaxRow)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
        
        
    For iCounter = 2 To iMaxRow
                
        iLeaves = CInt(Cells(iCounter, "I"))
        bstartDate = Format(Cells(iCounter, "G"), "mm/dd/yyyy")
        bendDate = Format(Cells(iCounter, "H"), "mm/dd/yyyy")
        iproFrom = Day(bstartDate)
        iproTill = Day(bendDate)

        If iLeaves > 0 Then
            sName = Cells(iCounter, "B")
            Cells(iCounter, "B") = sName & " - leaves adjusted " & iLeaves & " day(s)"
        End If
        
        ' checking for pro-rate
        If iproFrom > 1 Then
            sName = Cells(iCounter, "B")
            Cells(iCounter, "B") = sName & " - prorated from " & bstartDate
        End If
        If iproTill < 30 Then
            sName = Cells(iCounter, "B")
            Cells(iCounter, "B") = sName & " - prorated till " & bendDate
        End If

        'round off the values as required
        
        Cells(iCounter, "M") = Round(Cells(iCounter, "M"), RoundOff)


        dAmount = dAmount + CDbl(Cells(iCounter, "M"))
        
    Next iCounter
    
    For iCounter = 2 To iMaxRow
        
        ' remove unbilled or shadow rows
        If Cells(iCounter, "D") = C_SUNBILLED Or Cells(iCounter, "D") = C_SSHADOW Then
            Range("D" & iCounter).Select
            Application.CutCopyMode = False
            Selection.EntireRow.Delete
            iCounter = iCounter - 1
        End If
        
        
    Next iCounter

    iMaxRow = Range("A1").End(xlDown).Row
    
    ' remove correction and net days
'    Columns("C:F").Select
'    Selection.Delete Shift:=xlToLeft
    
    ' calibrate the row numbers
    
    'iMaxRow = Range("A1").End(xlDown).Row
    
    ' SORT THE DATA AND SUB GROUP TO GET THE PROJECTWISE TOTALS
'    Application.CutCopyMode = False
'    ActiveWorkbook.Worksheets(1).Sort.SortFields.Clear
'    ActiveWorkbook.Worksheets(1).Sort.SortFields.Add Key:=Range("F2:F" & iMaxRow) _
'        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
'    With ActiveWorkbook.Worksheets(1).Sort
'        .SetRange Range("A1:K" & iMaxRow)
'        .Header = xlYes
'        .MatchCase = False
'        .Orientation = xlTopToBottom
'        .SortMethod = xlPinYin
'        .Apply
'    End With
    
    iMaxCol = [iv1].End(xlToLeft).Column
    Selection.Subtotal GroupBy:=6, Function:=xlSum, TotalList:=Array(iMaxCol), _
        Replace:=True, PageBreaks:=False, SummaryBelowData:=True
    
    ' remove status, work location and and billing status
    Columns("C:E").Select
    Selection.Delete Shift:=xlToLeft
    'Columns("D:E").Select
    'Selection.Delete Shift:=xlToLeft
    ' remove billing start, end dates and correction and net days
    Columns("D:G").Select
    Selection.Delete Shift:=xlToLeft
        
    ' calibrate the row numbers
        
    iMaxRow = Range("F1").End(xlDown).Row
    
    iCounter = 2
    
    iRowNum = 0
    
    While iCounter <= iMaxRow
        If Len(Cells(iCounter, "A")) > 0 Then
            iRowNum = iRowNum + 1
            Cells(iCounter, "A") = iRowNum
        End If
        
        iCounter = iCounter + 1
    Wend
    
    
'    For iCounter = 2 To iMaxRow
'    If Cells("A") <> Null Then
'
'        Cells(iCounter, "A") = iCounter - 1
'    End If
'
'    Next iCounter


    If DiscountType = C_SPCT Then
        dDiscountAmount = Discount * dAmount
    ElseIf DiscountType = C_SAMT Then
        dDiscountAmount = Discount
    End If

    dInvoiceAmount = dAmount - dDiscountAmount

  '  Cells(iMaxRow + 1, "B") = "Total Amount"

  '  Cells(iMaxRow + 1, "E") = Round(dAmount, 2)


    Cells(iMaxRow + 1, "C") = "Discount"

    Cells(iMaxRow + 1, "F") = Round(dDiscountAmount, RoundOff)


    Cells(iMaxRow + 2, "C") = "Total Invoice Amount"

    Cells(iMaxRow + 2, "F") = Round(dInvoiceAmount, RoundOff)

    'format the cells to highlight content
    MultipleFinishingTouch iMaxRow

    'copy the selection to clipboard
    Range("A1:F" & iMaxRow + 2).Copy
    
End Sub
Private Sub RemoveUnwantedColumns()
Dim i As Integer
Dim LastColn As Long
Dim StrIN


StrIN = Array("Resume - Employee Relevant Experience", "Member - Job Title", "Resume - Skills Keywords", _
              "Skills Bucket", "Member Start Date", "Member End Date", "Customer - Company Name", "Customer Contract - Title")

LastColn = Cells(1, Columns.Count).End(xlToLeft).Column


For i = LastColn To 1 Step -1

         If IsNumeric(Application.Match(Cells(1, i), StrIN, 0)) Then
         Columns(i).EntireColumn.Delete
         End If
         
Next i

End Sub
